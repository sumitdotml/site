---
import HeaderLink from "./HeaderLink.astro";
import ThemeToggle from "./ThemeToggle.astro";
import Breadcrumbs from "./Breadcrumbs.astro";
import { HOME_ICON, NAV_LINKS } from "../data/navigation";

interface Props {
	breadcrumbTitle?: string;
}

const { breadcrumbTitle } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const isHomePage = pathname === "" || pathname === "/";
---

<header data-site-header>
	<nav>
		<div
			class:list={[
				"logo",
				{ "hide-on-mobile": !isHomePage, "hide-on-homepage": isHomePage },
			]}
		>
			<a href="/">{HOME_ICON}</a>
		</div>
		<div
			class:list={[
				"nav-links",
				{ "show-on-mobile": isHomePage, "nav-links-homepage": isHomePage },
			]}
		>
			{
				NAV_LINKS.map((link) => (
					<HeaderLink href={link.href}>{link.label}</HeaderLink>
				))
			}
			<ThemeToggle />
		</div>
		{
			!isHomePage && (
				<div class="nav-mobile">
					<Breadcrumbs customTitle={breadcrumbTitle} />
					<ThemeToggle />
				</div>
			)
		}
	</nav>
</header>
<style>
	header {
		margin: 0;
		padding: 0 1em;
		background: transparent;
		position: sticky;
		top: 0;
		z-index: 20;
		transition:
			backdrop-filter 0.25s ease,
			-webkit-backdrop-filter 0.25s ease,
			opacity 0.25s ease;
	}

	header.scrolled {
		background-color: rgba(var(--bg-color-rgb), var(--header-overlay-alpha));
		backdrop-filter: blur(var(--header-backdrop-blur));
		-webkit-backdrop-filter: blur(var(--header-backdrop-blur));
	}

	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		max-width: 720px;
		margin: 0 auto;
		padding: 1.5em 0 1em;
	}

	.logo a {
		font-size: 1.75em;
		text-decoration: none;
		line-height: 1;
	}

	.nav-links {
		display: flex;
		gap: 2em;
		font-size: 0.95em;
		align-items: center;
	}

	.nav-mobile {
		display: none;
	}

	.hide-on-mobile {
		display: block;
	}

	.show-on-mobile {
		display: flex;
	}

	.hide-on-homepage {
		display: none;
	}

	.nav-links-homepage {
		margin-left: auto;
	}

	@media (max-width: 720px) {
		nav {
			padding-left: 0em;
			padding-right: 0.6em;
			padding-top: 1.15em;
			padding-bottom: 0.9em;
		}

		.logo a {
			font-size: 1.6em;
		}

		.nav-links {
			gap: 1.75em;
			font-size: 0.95em;
		}
	}

	@media (max-width: 480px) {
		header {
			padding: 0 1em;
		}

		nav {
			padding-left: 0em;
			padding-right: 0.4em;
			padding-top: 1.25em;
			padding-bottom: 1.05em;
		}

		.logo a {
			font-size: 1.75em;
		}

		.hide-on-mobile {
			display: none;
		}

		.nav-links:not(.show-on-mobile) {
			display: none;
		}

		.nav-mobile {
			display: flex;
			gap: 1.5em;
			align-items: center;
			flex: 1;
			justify-content: space-between;
			padding-left: 0.4em;
			padding-right: 0.4em;
		}
	}

	@media (max-width: 360px) {
		.logo a {
			font-size: 1.55em;
		}

		.nav-mobile {
			gap: 1.2em;
		}
	}
</style>

<script>
	const headers = document.querySelectorAll("header[data-site-header]");

	if (headers.length > 0) {
		const toggleScrolled = () => {
			const shouldAdd = window.scrollY > 0;
			headers.forEach((headerEl) => {
				headerEl.classList.toggle("scrolled", shouldAdd);
			});
		};

		toggleScrolled();
		window.addEventListener("scroll", toggleScrolled, { passive: true });
	}
</script>
